@model AfincoApp.Models.Usuario


@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryval")

@if (!String.IsNullOrEmpty(ViewBag.Errado))
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        @ViewBag.Errado
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal mt-5">
    <h4>Editar Usuario</h4>
    <hr />
    <a href="~/Views/Usuarios/Edit.cshtml">~/Views/Usuarios/Edit.cshtml</a>
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.UsuarioID)

    <div class="form-group">
        @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Sobrenome, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Sobrenome, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Sobrenome, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Login, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Login, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Login, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Senha, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Senha, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Senha, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Tipo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EnumDropDownListFor(model => model.Tipo)
            @Html.ValidationMessageFor(model => model.Tipo, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.ConfirmaSenha, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ConfirmaSenha, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ConfirmaSenha, "", new { @class = "text-danger" })
        </div>
    </div>



</div>

    <div class="row mt-3">
        <div class="m-2">
            <input type="submit" value="Salvar" class="btn btn-success" />
        </div>
        <div class="m-2">
            <a class="btn btn-primary mt-5" href="~/Usuarios/Index">Voltar &raquo;</a>
        </div>
    </div>
}

